{"version":3,"file":"list-posts.component.js","sourceRoot":"","sources":["../../../../../../Users/hnadotti/Documents/Projects/BlogWithAngular2/tmp/broccoli_type_script_compiler-input_base_path-UEtcAAFD.tmp/0/src/app/list-posts/list-posts.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAuC,iBAAiB,CAAC,CAAA;AACzD,uBAAmC,iBAAiB,CAAC,CAAA;AACrD,QAAO,SAAS,CAAC,CAAA;AACjB,8BAA4B,oBAAoB,CAAC,CAAA;AAEjD,iCAAuC,2BAA2B,CAAC,CAAA;AASnE;IAYI,4BACY,YAAyB,EACzB,OAAe,EACf,UAAkC;QAFlC,iBAAY,GAAZ,YAAY,CAAa;QACzB,YAAO,GAAP,OAAO,CAAQ;QACf,eAAU,GAAV,UAAU,CAAwB;QAd9C,cAAS,GAAW,YAAY,CAAC;QACjC,eAAU,GAAW,EAAE,CAAC;QACxB,gBAAW,GAAW,CAAC,CAAC;QACxB,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAW,EAAE,CAAC;IAYjB,CAAC;IAER,wCAAW,GAAX;QACI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACrC,CAAC;IAED,qCAAQ,GAAR;QACO,IAAI,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IAED,oCAAO,GAAP;QAAA,iBAMC;QALG,IAAI,KAAK,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;aAC3B,SAAS,CACL,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,EAC3B,UAAA,KAAK,IAAK,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;IACtD,CAAC;IAED,2CAAc,GAAd,UAAe,EAAU;QACrB,IAAI,CAAC,iBAAiB,GAAG,gCAAgC,GAAG,EAAE,CAAC;QAC/D,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,8BAA8B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAClF,CAAC;IAED,yCAAY,GAAZ,UAAa,IAAI;QACb,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,yCAAY,GAAZ,UAAa,IAAI;QAAjB,iBAIC;QAHG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAC5C,cAAM,OAAA,KAAI,CAAC,OAAO,EAAE,EAAd,CAAc,CACvB,CAAC;IACN,CAAC;IAvDL;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,gBAAgB;YAC1B,WAAW,EAAE,2BAA2B;YACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;YACvC,UAAU,EAAE,CAAE,0BAAiB,CAAE;SAClC,CAAC;;0BAAA;IAmDF,yBAAC;AAAD,CAAC,AAlDD,IAkDC;AAlDY,0BAAkB,qBAkD9B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ROUTER_DIRECTIVES }  from '@angular/router';\nimport 'rxjs/Rx';\nimport { PostService } from './../posts.service';\nimport { Post } from './../post';\nimport { DomSanitizationService } from '@angular/platform-browser';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-list-posts',\n  templateUrl: 'list-posts.component.html',\n  styleUrls: ['list-posts.component.css'],\n  directives: [ ROUTER_DIRECTIVES ]\n})\nexport class ListPostsComponent implements OnInit {\n    pageTitle: string = 'Posts List';\n    imageWidth: number = 50;\n    imageMargin: number = 2;\n    showImage: boolean = false;\n    listFilter: string = '';\n    errorMessage: string;\n    posts: Post[];\n    dangerousVideoUrl:string;\n\n\n\n    constructor(\n        private _postService: PostService,\n        private _router: Router,\n        private _sanitizer: DomSanitizationService\n\n        ) {}\n\n    toggleImage(): void {\n        this.showImage = !this.showImage;\n    }\n\n    ngOnInit(): void {\n           this.getPost();\n    }\n\n    getPost():void {\n        var posts = [];\n           this._postService.getPosts()\n           .subscribe(\n                posts => this.posts = posts,\n                error =>  this.errorMessage = <any>error);\n    }\n\n    updateVideoUrl(id: string) {\n        this.dangerousVideoUrl = 'https://www.youtube.com/embed/' + id;\n        return this._sanitizer.bypassSecurityTrustResourceUrl(this.dangerousVideoUrl);\n    }\n    \n    selectDetail(post) {\n        this._router.navigate(['/post', post._id]);\n    }\n\n    toDeletePost(post) {\n        this._postService.deletePost(post._id).subscribe(\n            () => this.getPost()\n        );\n    }\n\n}\n"]}