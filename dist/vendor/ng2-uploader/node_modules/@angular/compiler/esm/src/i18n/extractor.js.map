{"version":3,"file":"extractor.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/extractor.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as html from '../html_parser/ast';\nimport {I18nError} from './parse_util';\n\nconst _I18N_ATTR = 'i18n';\nconst _I18N_ATTR_PREFIX = 'i18n-';\n\n/**\n * Extract translatable message from an html AST as a list of html AST nodes\n */\nexport function extractAstMessages(\n    sourceAst: html.Node[], implicitTags: string[],\n    implicitAttrs: {[k: string]: string[]}): ExtractionResult {\n  const visitor = new _ExtractVisitor(implicitTags, implicitAttrs);\n  return visitor.extract(sourceAst);\n}\n\nexport class ExtractionResult {\n  constructor(public messages: Message[], public errors: I18nError[]) {}\n}\n\nclass _ExtractVisitor implements html.Visitor {\n  // <el i18n>...</el>\n  private _inI18nNode = false;\n  private _depth: number = 0;\n\n  // <!--i18n-->...<!--/i18n-->\n  private _blockMeaningAndDesc: string;\n  private _blockChildren: html.Node[];\n  private _blockStartDepth: number;\n  private _inI18nBlock: boolean;\n\n  // {<icu message>}\n  private _inIcu = false;\n\n  private _sectionStartIndex: number;\n  private _errors: I18nError[];\n\n  constructor(private _implicitTags: string[], private _implicitAttrs: {[k: string]: string[]}) {}\n\n  extract(nodes: html.Node[]): ExtractionResult {\n    const messages: Message[] = [];\n    this._inI18nBlock = false;\n    this._inI18nNode = false;\n    this._depth = 0;\n    this._inIcu = false;\n    this._sectionStartIndex = void 0;\n    this._errors = [];\n\n    nodes.forEach(node => node.visit(this, messages));\n\n    if (this._inI18nBlock) {\n      this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n    }\n\n    return new ExtractionResult(messages, this._errors);\n  }\n\n  visitExpansionCase(icuCase: html.ExpansionCase, messages: Message[]): any {\n    html.visitAll(this, icuCase.expression, messages);\n  }\n\n  visitExpansion(icu: html.Expansion, messages: Message[]): any {\n    this._mayBeAddBlockChildren(icu);\n\n    const wasInIcu = this._inIcu;\n\n    if (!this._inIcu) {\n      if (this._inI18nNode || this._inI18nBlock) {\n        this._addMessage(messages, [icu]);\n      }\n      this._inIcu = true;\n    }\n\n    html.visitAll(this, icu.cases, messages);\n\n    this._inIcu = wasInIcu;\n  }\n\n  visitComment(comment: html.Comment, messages: Message[]): any {\n    const isOpening = _isOpeningComment(comment);\n\n    if (isOpening && (this._inI18nBlock || this._inI18nNode)) {\n      this._reportError(comment, 'Could not start a block inside a translatable section');\n      return;\n    }\n\n    const isClosing = _isClosingComment(comment);\n\n    if (isClosing && !this._inI18nBlock) {\n      this._reportError(comment, 'Trying to close an unopened block');\n      return;\n    }\n\n    if (!(this._inI18nNode || this._inIcu)) {\n      if (!this._inI18nBlock) {\n        if (isOpening) {\n          this._inI18nBlock = true;\n          this._blockStartDepth = this._depth;\n          this._blockChildren = [];\n          this._blockMeaningAndDesc = comment.value.replace(/^i18n:?/, '').trim();\n          this._startSection(messages);\n        }\n      } else {\n        if (isClosing) {\n          if (this._depth == this._blockStartDepth) {\n            this._endSection(messages, this._blockChildren);\n            this._inI18nBlock = false;\n            this._addMessage(messages, this._blockChildren, this._blockMeaningAndDesc);\n          } else {\n            this._reportError(comment, 'I18N blocks should not cross element boundaries');\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  visitText(text: html.Text, messages: Message[]): any { this._mayBeAddBlockChildren(text); }\n\n  visitElement(el: html.Element, messages: Message[]): any {\n    this._mayBeAddBlockChildren(el);\n    this._depth++;\n    const wasInI18nNode = this._inI18nNode;\n    let useSection = false;\n\n    // Extract only top level nodes with the (implicit) \"i18n\" attribute if not in a block or an ICU\n    // message\n    const i18nAttr = _getI18nAttr(el);\n    const isImplicitI18n =\n        this._implicitTags.some((tagName: string): boolean => el.name === tagName);\n    if (!(this._inI18nNode || this._inIcu || this._inI18nBlock)) {\n      if (i18nAttr) {\n        this._inI18nNode = true;\n        this._addMessage(messages, el.children, i18nAttr.value);\n        useSection = true;\n      } else if (isImplicitI18n) {\n        this._inI18nNode = true;\n        this._addMessage(messages, el.children);\n      }\n    } else {\n      if (i18nAttr || isImplicitI18n) {\n        // TODO(vicb): we should probably allow nested implicit element (ie <div>)\n        this._reportError(\n            el, 'Could not mark an element as translatable inside a translatable section');\n      }\n    }\n\n    this._extractFromAttributes(el, messages);\n\n    if (useSection) {\n      this._startSection(messages);\n      html.visitAll(this, el.children, messages);\n      this._endSection(messages, el.children);\n    } else {\n      html.visitAll(this, el.children, messages);\n    }\n\n    this._depth--;\n    this._inI18nNode = wasInI18nNode;\n  }\n\n  visitAttribute(attribute: html.Attribute, messages: Message[]): any {\n    throw new Error('unreachable code');\n  }\n\n  private _extractFromAttributes(el: html.Element, messages: Message[]): void {\n    const explicitAttrNameToValue: Map<string, string> = new Map();\n    const implicitAttrNames: string[] = this._implicitAttrs[el.name] || [];\n\n    el.attrs.filter(attr => attr.name.startsWith(_I18N_ATTR_PREFIX))\n        .forEach(\n            attr => explicitAttrNameToValue.set(\n                attr.name.substring(_I18N_ATTR_PREFIX.length), attr.value));\n\n    el.attrs.forEach(attr => {\n      if (explicitAttrNameToValue.has(attr.name)) {\n        this._addMessage(messages, [attr], explicitAttrNameToValue.get(attr.name));\n      } else if (implicitAttrNames.some(name => attr.name === name)) {\n        this._addMessage(messages, [attr]);\n      }\n    });\n  }\n\n  private _addMessage(messages: Message[], ast: html.Node[], meaningAndDesc?: string): void {\n    if (ast.length == 0 ||\n        ast.length == 1 && ast[0] instanceof html.Attribute && !(<html.Attribute>ast[0]).value) {\n      // Do not create empty messages\n      return;\n    }\n    const [meaning, description] = _splitMeaningAndDesc(meaningAndDesc);\n    messages.push(new Message(ast, meaning, description));\n  }\n\n  /**\n   * Add the node as a child of the block when:\n   * - we are in a block,\n   * - we are not inside a ICU message (those are handled separately),\n   * - the node is a \"direct child\" of the block\n   */\n  private _mayBeAddBlockChildren(node: html.Node): void {\n    if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n      this._blockChildren.push(node);\n    }\n  }\n\n  /**\n   * Marks the start of a section, see `_endSection`\n   */\n  private _startSection(messages: Message[]): void {\n    if (this._sectionStartIndex !== void 0) {\n      throw new Error('Unexpected section start');\n    }\n\n    this._sectionStartIndex = messages.length;\n  }\n\n  /**\n   * Terminates a section.\n   *\n   * If a section has only one significant children (comments not significant) then we should not\n   * keep the message\n   * from this children:\n   *\n   * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n   * - one for the <p> content with meaning and description,\n   * - another one for the ICU message.\n   *\n   * In this case the last message is discarded as it contains less information (the AST is\n   * otherwise identical).\n   *\n   * Note that we should still keep messages extracted from attributes inside the section (ie in the\n   * ICU message here)\n   */\n  private _endSection(messages: Message[], directChildren: html.Node[]): void {\n    if (this._sectionStartIndex === void 0) {\n      throw new Error('Unexpected section end');\n    }\n\n    const startIndex = this._sectionStartIndex;\n    const significantChildren: number = directChildren.reduce(\n        (count: number, node: html.Node): number => count + (node instanceof html.Comment ? 0 : 1),\n        0);\n\n    if (significantChildren == 1) {\n      for (let i = startIndex; i < messages.length; i++) {\n        let ast = messages[i].nodes;\n        if (!(ast.length == 1 && ast[0] instanceof html.Attribute)) {\n          messages.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    this._sectionStartIndex = void 0;\n  }\n\n  private _reportError(node: html.Node, msg: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, msg));\n  }\n}\n\n/**\n * A Message contain a fragment (= a subtree) of the source html AST.\n */\nexport class Message {\n  constructor(public nodes: html.Node[], public meaning: string, public description: string) {}\n}\n\nfunction _isOpeningComment(n: html.Node): boolean {\n  return n instanceof html.Comment && n.value && n.value.startsWith('i18n');\n}\n\nfunction _isClosingComment(n: html.Node): boolean {\n  return n instanceof html.Comment && n.value && n.value === '/i18n';\n}\n\nfunction _getI18nAttr(p: html.Element): html.Attribute {\n  return p.attrs.find(attr => attr.name === _I18N_ATTR) || null;\n}\n\nfunction _splitMeaningAndDesc(i18n: string): [string, string] {\n  if (!i18n) return ['', ''];\n  const pipeIndex = i18n.indexOf('|');\n  return pipeIndex == -1 ? ['', i18n] : [i18n.slice(0, pipeIndex), i18n.slice(pipeIndex + 1)];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}